#include "WebServer.h"
#include "SPIFFS.h"

const uint8_t edit_htm_gz[] PROGMEM = {
    0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xb5, 0x5a, 0x0d, 0x5f, 0xdb, 0x38, 0xd2, 0xff, 0x2a, 0xaa, 0x7b, 0xdb, 0x3a, 0x07, 0x71, 0x12, 0xa0, 0x6c, 0x1b, 0x30, 0xdd, 
    0x04, 0x68, 0x69, 0x79, 0x27, 0x49, 0x5b, 0xda, 0xe3, 0xd9, 0x9f, 0x62, 0x2b, 0xb1, 0xc0, 0x96, 0x5d, 0x5b, 0x26, 0xd0, 0x6c, 0xbe, 0xfb, 0xcd, 0x48, 0x76, 0x6c, 0x87, 0xd0, 0x97, 0x7d, 
    0x6e, 0x4b, 0x21, 0xb2, 0xa4, 0x91, 0x66, 0x46, 0x33, 0xff, 0x99, 0x91, 0xb3, 0xfd, 0x64, 0xef, 0x74, 0xb7, 0x7f, 0x79, 0xb6, 0x4f, 0x3c, 0x19, 0xf8, 0x3b, 0xdb, 0xf8, 0x97, 0xf8, 0x54, 
    0x8c, 0x6d, 0x26, 0x76, 0xb6, 0x25, 0x97, 0x3e, 0xdb, 0xd9, 0xef, 0x9d, 0x91, 0x7d, 0x97, 0xcb, 0x30, 0xde, 0x6e, 0xe8, 0x9e, 0xed, 0x44, 0xde, 0xfb, 0x8c, 0x04, 0xcc, 0xe5, 0xd4, 0x4e, 
    0x9c, 0x98, 0xc1, 0x64, 0x62, 0x39, 0xc1, 0xf4, 0x5b, 0x9d, 0x0b, 0x97, 0xdd, 0xb5, 0xc9, 0x7a, 0xb3, 0xb9, 0x45, 0xa2, 0x30, 0xe1, 0x92, 0x87, 0xa2, 0x4d, 0xe8, 0x30, 0x09, 0xfd, 0x54, 
    0xb2, 0x2d, 0xe2, 0xb3, 0x91, 0x6c, 0x93, 0x17, 0xd1, 0xdd, 0x16, 0x19, 0x86, 0xb1, 0xcb, 0xe2, 0x36, 0x69, 0x45, 0x77, 0x04, 0x86, 0xb9, 0x4b, 0x9e, 0x6e, 0x6c, 0x6c, 0x40, 0x3f, 0x75, 
    0x6e, 0xc6, 0x71, 0x98, 0x0a, 0xb7, 0xee, 0x84, 0x7e, 0x08, 0x33, 0x9e, 0x8e, 0x5e, 0xe0, 0xcf, 0x16, 0x71, 0x79, 0x12, 0xf9, 0xf4, 0xbe, 0x4d, 0x44, 0x28, 0x18, 0xae, 0x70, 0x57, 0x4f, 
    0x3c, 0xea, 0x86, 0x93, 0x36, 0x69, 0xc2, 0x4f, 0xab, 0x09, 0x4b, 0xc5, 0xe3, 0x21, 0x35, 0x9b, 0xab, 0x44, 0xff, 0xb7, 0x36, 0x6a, 0x5b, 0x64, 0x14, 0x0a, 0x59, 0x4f, 0xf8, 0x37, 0x06, 
    0x9b, 0xad, 0xe1, 0xd6, 0xaa, 0x63, 0x44, 0x03, 0xee, 0xc3, 0x5a, 0x09, 0x15, 0x49, 0x3d, 0x61, 0x31, 0x1f, 0x65, 0x03, 0x13, 0xc6, 0xc7, 0x1e, 0x70, 0xf9, 0x7b, 0xb3, 0x39, 0x03, 0xa9, 
    0x48, 0xea, 0x4f, 0x7d, 0x9e, 0xc0, 0x0a, 0x28, 0x75, 0xbe, 0xb7, 0x0c, 0x23, 0xd8, 0x34, 0x17, 0x08, 0x1a, 0x01, 0x8d, 0xc7, 0x5c, 0xa8, 0x66, 0x44, 0x5d, 0x97, 0x8b, 0x31, 0xb4, 0x15, 
    0xbd, 0xcf, 0xa7, 0x85, 0x2a, 0x62, 0xe6, 0x53, 0xc9, 0x6f, 0x61, 0x85, 0x80, 0x8b, 0xfa, 0x84, 0xbb, 0xd2, 0x6b, 0x93, 0xcd, 0x26, 0x72, 0xe5, 0xa4, 0x71, 0x82, 0xe2, 0x46, 0x21, 0x17, 
    0x92, 0xc5, 0x8a, 0x36, 0x89, 0xa8, 0x98, 0xe6, 0x6a, 0x50, 0xea, 0x99, 0xeb, 0x80, 0x0b, 0x9f, 0x0b, 0x56, 0x1f, 0xfa, 0xa1, 0x73, 0x53, 0xda, 0x73, 0x33, 0xba, 0xcb, 0x76, 0x6d, 0x7b, 
    0xe1, 0x2d, 0x8b, 0xa7, 0x85, 0x3e, 0xf5, 0x12, 0x95, 0xd1, 0xea, 0x06, 0x8c, 0xb1, 0x99, 0x25, 0x6f, 0x53, 0x18, 0x06, 0xd5, 0x61, 0x03, 0x64, 0x2f, 0xa4, 0xa9, 0x08, 0xb9, 0xa8, 0x12, 
    0x4d, 0xc8, 0x45, 0x94, 0xca, 0xe9, 0xb2, 0x93, 0x0f, 0x23, 0xea, 0x70, 0x79, 0xaf, 0x94, 0x02, 0x33, 0xa7, 0xa8, 0x6a, 0xa4, 0x8c, 0x03, 0xea, 0xab, 0x63, 0x21, 0x1f, 0x58, 0xec, 0x52, 
    0x41, 0x57, 0x49, 0x27, 0xe6, 0xd4, 0x5f, 0x25, 0xbd, 0xd2, 0xc1, 0xd4, 0x83, 0xf0, 0x5b, 0x3d, 0x85, 0x07, 0xe8, 0xf0, 0x99, 0x23, 0xf3, 0x63, 0x80, 0xc3, 0x1a, 0xde, 0x70, 0xb9, 0x6c, 
    0x68, 0x49, 0x57, 0x45, 0x91, 0x4a, 0x7b, 0x5e, 0x76, 0xd6, 0x2d, 0xa5, 0x36, 0x94, 0x40, 0x29, 0x44, 0xcb, 0x59, 0x1f, 0x86, 0x52, 0x86, 0x41, 0x66, 0xaf, 0x85, 0x1e, 0xb4, 0xb1, 0xbd, 
    0x5c, 0x72, 0x66, 0x8f, 0x1e, 0x4f, 0x79, 0x9f, 0x2d, 0x02, 0x8a, 0x97, 0xdc, 0xa1, 0x7e, 0x9d, 0xfa, 0x7c, 0x0c, 0x5a, 0x0a, 0xb8, 0xeb, 0xfa, 0xac, 0x6c, 0xfa, 0x6d, 0x92, 0xc6, 0xbe, 
    0xe9, 0x52, 0x49, 0xdb, 0x3c, 0xa0, 0x63, 0xd6, 0x88, 0xc4, 0x78, 0x6b, 0x48, 0x13, 0xb6, 0xb9, 0xb1, 0xca, 0x3f, 0x74, 0x4f, 0x2f, 0x26, 0xcd, 0xc3, 0xb7, 0xe3, 0xb0, 0x03, 0xff, 0x4e, 
    0x7a, 0x03, 0x6f, 0x7f, 0x30, 0x86, 0x56, 0x17, 0x1f, 0x3b, 0xe7, 0xbb, 0x9d, 0x73, 0xf8, 0xd8, 0x6d, 0xad, 0x5c, 0x8f, 0xbe, 0x62, 0x47, 0xf7, 0xad, 0xdb, 0xed, 0x0f, 0xf6, 0x3b, 0x9d, 
    0xc3, 0xc6, 0xbb, 0x93, 0xc9, 0xc7, 0xc3, 0x4d, 0x1c, 0xee, 0xfa, 0xcd, 0x8b, 0x0f, 0x5e, 0x73, 0xb0, 0xf6, 0x2a, 0x70, 0x0f, 0x5c, 0xcf, 0x09, 0x06, 0x9d, 0xf3, 0x8f, 0x17, 0xb7, 0x97, 
    0xc1, 0x60, 0xdc, 0xfb, 0xd8, 0xf2, 0x3e, 0xaf, 0x7d, 0xe8, 0x7d, 0xfe, 0xf8, 0xe6, 0x86, 0x7d, 0x3a, 0x78, 0xff, 0xb9, 0x3f, 0x01, 0x82, 0xbd, 0xb0, 0x37, 0xb8, 0xe8, 0x7e, 0xe8, 0x8e, 
    0x3f, 0x77, 0x9d, 0xfd, 0xbb, 0xa1, 0x7f, 0xd2, 0x7d, 0xdb, 0x19, 0x76, 0xd6, 0x1c, 0xc6, 0xc6, 0xfd, 0x8b, 0x6e, 0xfa, 0xee, 0xf0, 0x74, 0xcc, 0xb9, 0xd7, 0xfb, 0x7c, 0xd2, 0x77, 0x76, 
    0x5f, 0x1c, 0x0d, 0x0e, 0x3a, 0xdc, 0x3b, 0x79, 0x7f, 0xd1, 0xbc, 0x79, 0x7b, 0xb8, 0xbb, 0xe7, 0x5c, 0xbe, 0xbf, 0xdc, 0xdc, 0x5b, 0x6f, 0xfc, 0xfe, 0xfb, 0xb1, 0x7b, 0xca, 0x45, 0xff, 
    0xf6, 0x5b, 0x67, 0xbc, 0x3b, 0x79, 0x79, 0x9f, 0xf4, 0xbd, 0x77, 0xb7, 0xa2, 0xf1, 0x21, 0xbc, 0x7e, 0x77, 0x7f, 0x0c, 0xbf, 0x67, 0x67, 0x2b, 0xc3, 0x5e, 0x2b, 0x19, 0x9c, 0xbf, 0xfb, 
    0xb0, 0x96, 0xbc, 0x7a, 0x11, 0x75, 0xf7, 0xf6, 0x6e, 0x83, 0xe1, 0x59, 0x23, 0x70, 0x6f, 0x46, 0xf2, 0xe5, 0xba, 0x8c, 0x2e, 0xc7, 0xe9, 0xe7, 0xaf, 0x2f, 0xde, 0x7b, 0x8d, 0x53, 0x46, 
    0x2f, 0xbd, 0x95, 0xfb, 0x6f, 0xf7, 0x2f, 0xbd, 0xfe, 0xc1, 0xed, 0x89, 0x4f, 0xef, 0x4e, 0x4e, 0x9c, 0x6f, 0xc1, 0x8a, 0x4f, 0x5f, 0x9d, 0xf6, 0x7d, 0x1a, 0xb7, 0x06, 0x6e, 0xa7, 0xb1, 
    0xb2, 0xbb, 0xd6, 0xd9, 0x90, 0xf1, 0xc5, 0xae, 0xd8, 0x5b, 0xbf, 0xee, 0xbd, 0xec, 0x76, 0x5b, 0xe1, 0xf0, 0xeb, 0xda, 0xdb, 0x9b, 0xcd, 0xb7, 0x83, 0xcd, 0xf3, 0xe1, 0x79, 0xa7, 0xb7, 
    0xd1, 0x1d, 0xd0, 0xcb, 0xde, 0x79, 0x67, 0xb4, 0x31, 0xf4, 0xbc, 0xc3, 0xc3, 0xfe, 0x1b, 0xb7, 0xf3, 0x2d, 0xee, 0x9c, 0x4e, 0x3a, 0x77, 0xfb, 0x83, 0xce, 0xc1, 0xca, 0xe1, 0xfe, 0x71, 
    0xb3, 0xd5, 0xbb, 0x5c, 0x1f, 0x1f, 0x6f, 0x4e, 0xba, 0xc9, 0x7e, 0xe7, 0xbc, 0xdb, 0x1c, 0xbf, 0x5f, 0x09, 0xe8, 0xe7, 0x70, 0x77, 0x7d, 0xfc, 0x6e, 0x93, 0x9f, 0x5d, 0xd2, 0xce, 0xbb, 
    0xee, 0xfb, 0x84, 0x5f, 0x04, 0x07, 0x83, 0x66, 0xa7, 0x73, 0x74, 0xca, 0xde, 0xec, 0xae, 0xd3, 0xc3, 0x35, 0xe7, 0x23, 0xe8, 0x7f, 0xf0, 0x89, 0xfd, 0xbe, 0xd2, 0x99, 0x9c, 0x36, 0x7d, 
    0xe7, 0x15, 0xeb, 0x1f, 0x5c, 0xf6, 0xd5, 0xe9, 0xec, 0xfb, 0x6f, 0xfa, 0x37, 0xbd, 0xf4, 0x3c, 0xd8, 0xdd, 0xad, 0x81, 0x55, 0xd6, 0x63, 0x16, 0x31, 0x2a, 0x2b, 0xa8, 0x57, 0x78, 0x4f, 
    0x33, 0x73, 0x16, 0x65, 0x94, 0x99, 0x3b, 0x4b, 0x76, 0x27, 0xeb, 0x2e, 0x73, 0xc2, 0x98, 0xea, 0x49, 0x40, 0xc2, 0x62, 0xb4, 0xb5, 0xd9, 0x1f, 0x0a, 0x91, 0x89, 0x46, 0x64, 0x42, 0x85, 
    0x4b, 0xcc, 0xdc, 0x3f, 0x10, 0x6c, 0x5c, 0x76, 0xcb, 0x1d, 0x56, 0x8f, 0xf8, 0x1d, 0xf3, 0xeb, 0x8a, 0xba, 0xdd, 0xac, 0x4d, 0x95, 0x33, 0xe6, 0xd3, 0xa8, 0x00, 0x6b, 0xd3, 0xcb, 0xe6, 
    0x3d, 0xee, 0x35, 0x75, 0x18, 0xa0, 0x22, 0x38, 0x52, 0x80, 0x9f, 0xda, 0xa3, 0xc2, 0xb8, 0x3e, 0x4c, 0xc7, 0x23, 0x7e, 0x07, 0x76, 0x3e, 0xe2, 0x82, 0x4b, 0x46, 0x5a, 0xc9, 0xec, 0x8f, 
    0x7c, 0x9d, 0x1b, 0x76, 0x3f, 0x8a, 0x69, 0xc0, 0x92, 0x9f, 0x5d, 0x66, 0x3a, 0x8a, 0xc3, 0xa0, 0x04, 0x35, 0x33, 0x19, 0x96, 0x9f, 0x66, 0xb3, 0xa7, 0x69, 0xe4, 0x87, 0x14, 0x24, 0x5d, 
    0x0a, 0x2e, 0x39, 0x1a, 0xc7, 0xda, 0xcb, 0xca, 0xb8, 0x9c, 0x7b, 0xde, 0x9a, 0xf2, 0xd7, 0x8a, 0xd3, 0xaf, 0x6d, 0x94, 0xfc, 0xba, 0xae, 0x29, 0x5a, 0x0a, 0x8a, 0x97, 0xc4, 0x20, 0x85, 
    0x19, 0x65, 0xa0, 0x7c, 0x2a, 0x41, 0xcd, 0x8f, 0x73, 0xa3, 0xf7, 0xcb, 0x11, 0xa4, 0xcc, 0x51, 0x06, 0xfa, 0x2d, 0x8d, 0xfa, 0x73, 0x29, 0x61, 0xfe, 0xec, 0x29, 0x53, 0x81, 0x76, 0x95, 
    0x3c, 0x8d, 0x62, 0x38, 0x2d, 0x36, 0xf9, 0xd1, 0xfa, 0x85, 0xc0, 0x0f, 0x76, 0xca, 0xd6, 0xd7, 0x61, 0x36, 0x97, 0xae, 0x88, 0xb5, 0x4a, 0x84, 0x7c, 0x97, 0x25, 0xf2, 0xc2, 0x78, 0x89, 
    0xb9, 0x17, 0xc8, 0xdc, 0x8f, 0x0e, 0x60, 0x7d, 0xf3, 0xb7, 0x39, 0x47, 0x1b, 0xcd, 0xdf, 0x66, 0x56, 0x46, 0x30, 0x4f, 0x0b, 0x5a, 0xcd, 0x66, 0xb3, 0x59, 0x44, 0xfe, 0x97, 0x05, 0x37, 
    0xc3, 0x17, 0xf8, 0x33, 0xe7, 0x56, 0x2d, 0x57, 0x1a, 0x5e, 0xdf, 0x78, 0xf5, 0xd2, 0x1d, 0xce, 0x87, 0x73, 0x59, 0x1f, 0x9f, 0x11, 0x53, 0x97, 0xa7, 0x09, 0xf0, 0xdd, 0xfc, 0x6d, 0xae, 
    0xf0, 0xb5, 0x0d, 0xa5, 0x90, 0xe2, 0xf4, 0xd5, 0x63, 0xc9, 0xe4, 0x93, 0x88, 0x0b, 0xb2, 0x96, 0x28, 0x23, 0xa1, 0xf1, 0xdc, 0xb2, 0x17, 0xf2, 0x8e, 0xd9, 0x1f, 0x85, 0x75, 0x23, 0xc5, 
    0xb4, 0xf9, 0xdb, 0x54, 0xc6, 0x10, 0xab, 0x46, 0x10, 0xcb, 0x20, 0xc0, 0x87, 0x92, 0x4a, 0x66, 0x36, 0x6b, 0x33, 0x90, 0x76, 0xd9, 0xc8, 0xfa, 0x66, 0xd3, 0x65, 0xe3, 0xda, 0x6c, 0xb6, 
    0xdd, 0x50, 0xe1, 0x13, 0xd2, 0x29, 0x27, 0xe6, 0x91, 0xdc, 0x19, 0xa5, 0xc2, 0x41, 0x46, 0xc8, 0x98, 0x99, 0xac, 0x36, 0x8d, 0x99, 0x4c, 0x63, 0x41, 0xdc, 0xd0, 0x49, 0xd1, 0x63, 0xac, 
    0x31, 0x93, 0xfb, 0xda, 0x79, 0xba, 0xf7, 0xef, 0x5c, 0x98, 0x31, 0x9b, 0x13, 0x38, 0x4b, 0x09, 0x00, 0x06, 0x60, 0xbf, 0x8c, 0xa6, 0x32, 0x1f, 0x42, 0x16, 0x2c, 0x72, 0xc8, 0xee, 0x4d, 
    0xb6, 0x4a, 0xe4, 0x9c, 0x92, 0x59, 0x38, 0x60, 0xe6, 0xd3, 0x70, 0x50, 0xd4, 0xa6, 0xb7, 0xa0, 0x0a, 0x6a, 0xb3, 0x2f, 0xf2, 0x6a, 0x95, 0x70, 0x5b, 0xc0, 0x27, 0x1c, 0xb2, 0x26, 0xa0, 
    0x64, 0x9b, 0x70, 0xf2, 0x9a, 0xd4, 0x5b, 0x04, 0x8c, 0x81, 0xec, 0xa8, 0x07, 0x6c, 0x37, 0x67, 0x65, 0xee, 0x14, 0x1f, 0x6f, 0xb8, 0xcf, 0x06, 0x99, 0x0f, 0xab, 0x6d, 0xd5, 0xe2, 0xf3, 
    0x49, 0x34, 0xdb, 0x6d, 0xad, 0xd9, 0x24, 0x4f, 0x6c, 0x06, 0xeb, 0x50, 0x1f, 0xa2, 0xa4, 0x69, 0xec, 0x5f, 0x5c, 0x9c, 0x5e, 0x7c, 0x31, 0xc8, 0x0a, 0x61, 0xf0, 0x6b, 0x5c, 0xb5, 0x09, 
    0xb6, 0x45, 0x0d, 0x76, 0x91, 0x56, 0xcc, 0x46, 0x31, 0x4b, 0xbc, 0x33, 0x2a, 0x3d, 0x33, 0xb1, 0x6e, 0xa9, 0x9f, 0x96, 0xc5, 0xe4, 0xa8, 0x15, 0x64, 0x5f, 0xda, 0x82, 0x4d, 0xc8, 0x1b, 
    0x38, 0x85, 0x3d, 0x88, 0xa8, 0x60, 0xad, 0x16, 0x8d, 0x22, 0x26, 0x5c, 0xd3, 0x88, 0x80, 0xd2, 0x58, 0x25, 0xac, 0xb6, 0x0a, 0x32, 0x7d, 0x4d, 0x59, 0x22, 0x13, 0x0b, 0x6c, 0xde, 0x34, 
    0xce, 0x06, 0x7d, 0xe8, 0x9f, 0x80, 0xe1, 0x86, 0x13, 0xb0, 0x63, 0x47, 0x99, 0x88, 0x85, 0xd3, 0x05, 0x9c, 0xfc, 0x8a, 0xd1, 0x40, 0x4f, 0x35, 0x94, 0x18, 0xb4, 0x36, 0xc3, 0x4d, 0x42, 
    0x1b, 0x8e, 0xc1, 0x18, 0xa6, 0x60, 0x9a, 0xc2, 0x80, 0xac, 0x33, 0xb4, 0xb8, 0x10, 0x2c, 0x3e, 0xe8, 0x1f, 0x1f, 0xd9, 0xc6, 0x85, 0x66, 0x94, 0x1c, 0x41, 0xd6, 0x04, 0x54, 0xea, 0x84, 
    0x33, 0x26, 0x76, 0x3d, 0xee, 0xbb, 0x66, 0x08, 0x14, 0xb8, 0x8a, 0xa3, 0x56, 0x51, 0x69, 0x14, 0x2e, 0xe2, 0x58, 0xf2, 0x3e, 0x62, 0xb6, 0x31, 0x02, 0xed, 0x01, 0x9d, 0x63, 0x05, 0xa9, 
    0x2f, 0x79, 0xe4, 0x33, 0xfb, 0x49, 0x0b, 0x1f, 0x91, 0x19, 0xdb, 0xc0, 0x3c, 0x41, 0x8d, 0x72, 0xd7, 0x36, 0x34, 0x50, 0x66, 0x00, 0xbb, 0x74, 0x2f, 0x27, 0xdb, 0x2b, 0xa9, 0xee, 0x95, 
    0x94, 0xc9, 0x33, 0xc5, 0x24, 0xd9, 0xfe, 0x18, 0x75, 0xd4, 0xa3, 0xde, 0x70, 0x3e, 0xea, 0xb2, 0x11, 0x05, 0x8e, 0x3e, 0xa0, 0xe6, 0x6d, 0xa3, 0xb1, 0x74, 0xbb, 0x24, 0xdb, 0xce, 0x5d, 
    0x50, 0x90, 0x5b, 0x56, 0x90, 0x36, 0x8d, 0xa5, 0xf4, 0x6e, 0x46, 0xef, 0x2f, 0xd0, 0xfb, 0x65, 0xfa, 0x5d, 0x65, 0x64, 0x4b, 0xe9, 0xfd, 0x8c, 0x3e, 0xae, 0x8a, 0x1b, 0x2b, 0x71, 0x35, 
    0xe0, 0xd6, 0x51, 0xbf, 0x28, 0x1a, 0x2c, 0x10, 0x57, 0x45, 0x8e, 0x2d, 0xf0, 0x7e, 0x3a, 0xf4, 0x99, 0x6b, 0x3f, 0x69, 0xe2, 0x23, 0x16, 0x12, 0xf6, 0x5a, 0x73, 0xd9, 0x4e, 0x71, 0xb6, 
    0x53, 0xba, 0xc0, 0x69, 0x5a, 0xe6, 0x14, 0xf2, 0xda, 0x5b, 0x46, 0x96, 0x72, 0x9a, 0x82, 0x19, 0xfa, 0x56, 0x28, 0x1c, 0x9f, 0x3b, 0x37, 0x76, 0xe1, 0x87, 0xb5, 0x29, 0x9f, 0x9b, 0x37, 
    0x78, 0x89, 0xc2, 0xd5, 0x01, 0xe4, 0x87, 0x45, 0x5f, 0xd6, 0xc2, 0x23, 0x98, 0xad, 0xc2, 0x7e, 0xcb, 0xd6, 0x10, 0x16, 0xbb, 0x63, 0xce, 0x6e, 0x18, 0x04, 0x14, 0x4d, 0x3f, 0x01, 0x36, 
    0xb2, 0x07, 0xa3, 0x06, 0x44, 0xe1, 0x52, 0xa2, 0x47, 0x7c, 0x6c, 0x15, 0x4e, 0x6f, 0x29, 0x9f, 0x23, 0x62, 0xa2, 0x03, 0xdb, 0x8e, 0x85, 0x2a, 0x4d, 0x2c, 0x50, 0xeb, 0x58, 0x7a, 0x3f, 
    0x72, 0xc3, 0xb9, 0x01, 0x2b, 0xa2, 0x2f, 0xcd, 0xab, 0xb9, 0x44, 0x0f, 0x1d, 0xf3, 0xb4, 0xf7, 0x0b, 0x9e, 0xa9, 0xb4, 0x5c, 0xb1, 0xe9, 0x5a, 0xa1, 0xa9, 0xca, 0x60, 0xe6, 0x2f, 0xf3, 
    0x61, 0x63, 0x36, 0x43, 0x86, 0x40, 0x48, 0x0f, 0xea, 0x61, 0xf6, 0x2b, 0x52, 0x16, 0x62, 0x28, 0x77, 0x81, 0x13, 0xb3, 0x1b, 0xe6, 0xeb, 0xf6, 0x7f, 0x2c, 0xf3, 0xcb, 0xff, 0x59, 0x57, 
    0x2b, 0xb5, 0xda, 0xeb, 0x7f, 0x35, 0xd4, 0x59, 0x98, 0xb2, 0xf6, 0xa5, 0x05, 0xb2, 0x52, 0x18, 0xb7, 0xfe, 0x5d, 0xfb, 0x8f, 0xa5, 0xc6, 0x2b, 0x83, 0x60, 0x50, 0x21, 0xc4, 0x37, 0xb5, 
    0x1b, 0xda, 0x65, 0x38, 0x02, 0xa0, 0x7d, 0xf6, 0x8c, 0x98, 0xd2, 0xa6, 0xd5, 0x73, 0x07, 0x54, 0x94, 0x88, 0x90, 0x96, 0xc2, 0x47, 0x48, 0x99, 0x16, 0x00, 0xb8, 0x0f, 0xe9, 0x4a, 0x86, 
    0xf7, 0xf3, 0x11, 0x25, 0x0d, 0x2a, 0x01, 0x74, 0x29, 0x94, 0x1a, 0x54, 0x60, 0x03, 0x2d, 0x24, 0xb1, 0x63, 0x6b, 0x55, 0xbe, 0xce, 0xc7, 0x6c, 0x05, 0xc2, 0xb3, 0x32, 0x64, 0x6b, 0xe2, 
    0x45, 0x1f, 0xca, 0x75, 0xc8, 0xb4, 0x82, 0xf5, 0x30, 0xae, 0x89, 0xe1, 0xce, 0xca, 0x82, 0xa9, 0x6d, 0x60, 0x30, 0x85, 0x33, 0xf0, 0x16, 0xfb, 0x55, 0xc9, 0xa4, 0x06, 0x0a, 0xaf, 0x79, 
    0xbe, 0xcd, 0x83, 0x31, 0x51, 0x4c, 0x3d, 0x5f, 0x79, 0xf4, 0xec, 0x9f, 0x6b, 0x86, 0xf1, 0x8f, 0xfd, 0x3c, 0x8f, 0x18, 0xcf, 0xfe, 0x74, 0x86, 0x8a, 0x75, 0x30, 0x3a, 0x66, 0x89, 0x70, 
    0x62, 0xd6, 0xe0, 0xe1, 0xb9, 0x41, 0xd4, 0xb6, 0xb6, 0x11, 0xd0, 0xbb, 0xac, 0x0e, 0xc7, 0x80, 0x8d, 0x35, 0xee, 0x5d, 0x9e, 0x21, 0xe6, 0x1d, 0xaa, 0xe8, 0xa5, 0xa9, 0x0c, 0x8b, 0x54, 
    0x40, 0xd7, 0x75, 0x46, 0x63, 0xe7, 0x79, 0x25, 0xde, 0x40, 0x88, 0xd4, 0x56, 0xa0, 0xa3, 0x41, 0xea, 0xa3, 0xfb, 0xb3, 0xef, 0x20, 0xbd, 0xcf, 0x75, 0xac, 0xa8, 0xe2, 0x33, 0xc0, 0x80, 
    0xc9, 0x6b, 0x10, 0x04, 0x4d, 0xa7, 0x0c, 0x1d, 0xdb, 0x58, 0x07, 0xec, 0x9c, 0xe9, 0xa4, 0x0d, 0xd2, 0x07, 0x7c, 0x32, 0x32, 0x2b, 0xad, 0xba, 0x22, 0x1c, 0x32, 0x85, 0x15, 0x56, 0x8b, 
    0x6c, 0x60, 0x18, 0xba, 0xf7, 0xa5, 0x1c, 0x22, 0xe9, 0xde, 0xef, 0xfa, 0x34, 0x49, 0x4e, 0x40, 0x6f, 0xa6, 0xe1, 0x04, 0x70, 0x3c, 0xda, 0x88, 0x21, 0x8a, 0x37, 0xd1, 0xc0, 0xaa, 0x84, 
    0x31, 0x0b, 0xa0, 0xfa, 0xd0, 0xec, 0x81, 0xfb, 0x63, 0xf4, 0x75, 0x91, 0x43, 0xb4, 0xc4, 0x25, 0x2c, 0xe2, 0x7d, 0xd1, 0x77, 0xf9, 0x13, 0x88, 0x2c, 0x39, 0x8c, 0xfd, 0x83, 0x7c, 0x96, 
    0x03, 0xdd, 0x32, 0x55, 0x27, 0xca, 0x87, 0x1e, 0xf0, 0xbf, 0x97, 0x99, 0x7c, 0x21, 0x43, 0xb2, 0x54, 0xc7, 0xe2, 0x1f, 0xe4, 0xbd, 0x1c, 0xb4, 0x96, 0xb1, 0x1e, 0x23, 0x34, 0x2e, 0x61, 
    0x1d, 0x70, 0x4c, 0xb2, 0x82, 0xf1, 0x78, 0x29, 0xe3, 0xe9, 0x3f, 0xc8, 0x78, 0xe1, 0x10, 0x61, 0x91, 0xe8, 0xe9, 0x2c, 0x12, 0x65, 0x71, 0xf9, 0xad, 0x01, 0x7b, 0x87, 0x76, 0x75, 0x11, 
    0x48, 0x82, 0x43, 0xdf, 0xef, 0x87, 0x11, 0x58, 0xfd, 0x63, 0x23, 0xed, 0x62, 0x24, 0x6f, 0x64, 0x1c, 0x17, 0x93, 0xc0, 0xdc, 0x96, 0xae, 0x7c, 0x04, 0x05, 0xd0, 0x23, 0x4b, 0xab, 0xa1, 
    0x1f, 0xae, 0x8d, 0xb3, 0xc0, 0x0e, 0x6c, 0x66, 0x81, 0x3a, 0xa1, 0xfb, 0x13, 0xa0, 0x88, 0x03, 0x3a, 0x9c, 0x77, 0x5c, 0x42, 0x07, 0x20, 0x04, 0x85, 0xc7, 0x4c, 0x77, 0x36, 0xea, 0x0e, 
    0xe0, 0xfd, 0x31, 0x84, 0xcb, 0x07, 0xb0, 0x38, 0xb3, 0x13, 0x04, 0xab, 0xe8, 0xae, 0xd4, 0x0d, 0x55, 0x90, 0xed, 0xce, 0x7b, 0xb9, 0x49, 0x11, 0xbc, 0x17, 0x4f, 0xad, 0x6c, 0x12, 0x74, 
    0x9e, 0x29, 0x51, 0x2b, 0x1c, 0x8d, 0x12, 0x26, 0x3f, 0x22, 0xb0, 0x81, 0x11, 0xcc, 0x3b, 0x0e, 0x14, 0xb2, 0x21, 0x97, 0xa1, 0x08, 0xc2, 0x34, 0x61, 0x61, 0x2a, 0x2b, 0xb1, 0xcd, 0x2c, 
    0xe4, 0xdb, 0x26, 0x09, 0xf9, 0xeb, 0x2f, 0x52, 0x74, 0xec, 0x10, 0x64, 0xd2, 0x2f, 0x77, 0x5e, 0xc2, 0x2c, 0xb7, 0xda, 0xb1, 0x43, 0x90, 0xe9, 0xb8, 0xf6, 0xd0, 0x50, 0xfe, 0x27, 0x16, 
    0x46, 0xcb, 0x16, 0xe6, 0xa8, 0xb2, 0x61, 0x8e, 0xba, 0x65, 0x4c, 0x55, 0xd9, 0xb0, 0x28, 0x03, 0x00, 0xba, 0x84, 0xca, 0xfc, 0x74, 0xf5, 0x52, 0xf6, 0x7b, 0x81, 0x28, 0xb5, 0x08, 0x0c, 
    0x4b, 0x70, 0x0b, 0x14, 0xe4, 0x22, 0xe0, 0xb9, 0x70, 0x38, 0x47, 0xe1, 0x84, 0xc5, 0xbb, 0x34, 0x61, 0x66, 0x0d, 0xa1, 0xba, 0xc0, 0x33, 0x1c, 0x47, 0x84, 0xf4, 0x97, 0xce, 0x04, 0xe1, 
    0xa8, 0x9e, 0x92, 0x27, 0x18, 0xa1, 0xc0, 0x5c, 0x13, 0xa4, 0x4d, 0x2b, 0x1b, 0x31, 0x0b, 0xcb, 0x73, 0xd0, 0xc1, 0x9e, 0x4e, 0xb2, 0x4d, 0x60, 0x09, 0x4a, 0x34, 0xb0, 0x8a, 0xb3, 0x38, 
    0x8c, 0xe8, 0x58, 0x05, 0x3f, 0xec, 0x54, 0x6e, 0x86, 0x2b, 0xae, 0x92, 0x27, 0x4d, 0xb5, 0x6a, 0xa9, 0xd4, 0x2b, 0x5c, 0xb0, 0xa8, 0xfa, 0x40, 0x5a, 0x43, 0x47, 0x6a, 0xad, 0x1e, 0xfa, 
    0x68, 0xb0, 0xa2, 0xea, 0xfa, 0x3c, 0x26, 0x26, 0x4e, 0x83, 0xea, 0x2f, 0x3b, 0x25, 0x74, 0x5f, 0x28, 0xe4, 0x43, 0xac, 0xff, 0xe0, 0x63, 0x65, 0xa5, 0x46, 0x74, 0x89, 0x62, 0xdb, 0x50, 
    0x21, 0x86, 0x57, 0x2a, 0x85, 0x56, 0x92, 0x56, 0x03, 0x9b, 0x89, 0x9c, 0xe0, 0x78, 0x96, 0x17, 0x61, 0x13, 0xf3, 0xe9, 0x5a, 0xa9, 0x6a, 0x73, 0x8b, 0xaa, 0xed, 0x91, 0xac, 0x89, 0xe9, 
    0xc4, 0x08, 0xb3, 0xb0, 0x07, 0xc9, 0x91, 0xac, 0x91, 0x64, 0xc2, 0xa5, 0xe3, 0x11, 0x84, 0x39, 0x07, 0x74, 0x4e, 0x0c, 0x09, 0x89, 0x7c, 0x9b, 0xe8, 0xb6, 0x27, 0x83, 0x72, 0xdb, 0x9f, 
    0x3f, 0x5c, 0x27, 0xf3, 0xa6, 0x93, 0x14, 0xed, 0xbb, 0xca, 0x14, 0x48, 0xe7, 0xe7, 0x93, 0x42, 0x31, 0x9a, 0x3f, 0x70, 0xc1, 0x8b, 0x55, 0x8b, 0x29, 0x45, 0x2b, 0x8a, 0xe6, 0xed, 0xc8, 
    0x2b, 0xda, 0x1e, 0xbb, 0x2b, 0xad, 0x11, 0x16, 0x73, 0x5c, 0x66, 0xb4, 0x73, 0x3b, 0x7d, 0xd2, 0x9c, 0xe5, 0xad, 0x56, 0xa1, 0x26, 0xff, 0x7f, 0xae, 0xa6, 0x48, 0x8c, 0x0b, 0x51, 0xa3, 
    0xa2, 0x3d, 0xe6, 0x85, 0xa0, 0xc3, 0x20, 0xfa, 0x11, 0x63, 0x71, 0xe9, 0x2e, 0xa2, 0x7c, 0x95, 0x20, 0x7f, 0xba, 0xb8, 0x97, 0xe8, 0x3c, 0xe6, 0xa8, 0xe2, 0xf5, 0x23, 0xcb, 0xc1, 0xcf, 
    0x93, 0xd0, 0x55, 0x89, 0x35, 0x58, 0x7d, 0x60, 0x8e, 0xc0, 0x8c, 0x1b, 0x46, 0xad, 0x8c, 0x07, 0xe9, 0xff, 0xa3, 0xe4, 0xdf, 0xdb, 0x3f, 0xda, 0xef, 0xef, 0xff, 0x6c, 0x6d, 0x81, 0x62, 
    0x96, 0xac, 0x36, 0xaa, 0x5e, 0xa5, 0x14, 0x89, 0x0e, 0x56, 0x21, 0x28, 0x38, 0x38, 0x06, 0x3a, 0x44, 0xee, 0x8f, 0xef, 0x7b, 0xa7, 0x27, 0xb0, 0x70, 0x0c, 0x98, 0x40, 0x2b, 0x12, 0x04, 
    0xf3, 0x85, 0xca, 0xbc, 0xbd, 0xdd, 0xff, 0xa9, 0xa2, 0x47, 0xbd, 0xa8, 0x6a, 0x13, 0x09, 0x18, 0x90, 0x31, 0xa4, 0xef, 0x26, 0x3c, 0x1b, 0x13, 0xf1, 0xec, 0xb6, 0x0f, 0xa3, 0xef, 0xa8, 
    0x08, 0xc5, 0x73, 0x3c, 0x1c, 0x95, 0x03, 0x97, 0xbc, 0x4d, 0x97, 0x96, 0xa8, 0x23, 0x20, 0x96, 0x1e, 0x4f, 0xca, 0x65, 0x61, 0x05, 0xb5, 0x7e, 0xfa, 0xd8, 0x66, 0xa5, 0xb6, 0x5e, 0x73, 
    0xb1, 0x62, 0xd1, 0x6f, 0x1d, 0x73, 0x00, 0x03, 0x45, 0x2a, 0x9c, 0x2f, 0x67, 0x17, 0xf9, 0x59, 0x1b, 0x10, 0x57, 0xb9, 0x30, 0xbe, 0x53, 0x69, 0x7d, 0xcf, 0x19, 0x44, 0xe1, 0x0c, 0x62, 
    0x29, 0x66, 0x94, 0xbc, 0x34, 0x73, 0xfb, 0xf9, 0x96, 0x5b, 0x64, 0x08, 0xbc, 0xde, 0x6c, 0x55, 0xe0, 0x05, 0x46, 0x15, 0xb6, 0x2c, 0x0c, 0x2a, 0x88, 0x81, 0xb1, 0x6b, 0x7a, 0x4b, 0xf5, 
    0x9d, 0xdf, 0x03, 0xf2, 0x47, 0xb1, 0x03, 0xc8, 0x9c, 0x3f, 0xb1, 0xb9, 0x40, 0x51, 0xc6, 0xaa, 0xa4, 0xfc, 0x50, 0x81, 0x19, 0xf9, 0x18, 0x8a, 0x95, 0xe1, 0x4d, 0x83, 0x18, 0x38, 0x4e, 
    0xee, 0xd5, 0x72, 0x21, 0xce, 0x96, 0x3c, 0x18, 0xa1, 0xfd, 0xfb, 0x2e, 0xbc, 0x34, 0x04, 0xe9, 0x60, 0x53, 0xf5, 0x4c, 0xba, 0x78, 0x0b, 0x80, 0xc3, 0x5d, 0x3f, 0x1c, 0x9a, 0x78, 0xe5, 
    0x38, 0xc5, 0x33, 0x6a, 0x43, 0x3d, 0x5b, 0x5b, 0x7a, 0x4b, 0xf7, 0xb3, 0x97, 0x01, 0x60, 0x3a, 0x4e, 0x35, 0xc6, 0x28, 0x71, 0x2a, 0x5e, 0xf1, 0x48, 0x7d, 0xfa, 0xbd, 0x12, 0x36, 0x4f, 
    0xe4, 0x94, 0x7f, 0x23, 0xae, 0xc5, 0x16, 0xe4, 0x58, 0xea, 0x36, 0xcc, 0x54, 0x28, 0x56, 0x7a, 0x36, 0x0c, 0x95, 0xb0, 0x3b, 0x3e, 0xa3, 0x71, 0x4f, 0x5d, 0x36, 0xa8, 0xf0, 0xbd, 0x80, 
    0xe8, 0x7f, 0xcf, 0xed, 0xf1, 0xa3, 0x0d, 0xb5, 0x39, 0x24, 0x87, 0xe0, 0xf0, 0xca, 0xbe, 0x21, 0x12, 0xcb, 0xec, 0xa2, 0xe0, 0x3b, 0xf4, 0xea, 0x62, 0xde, 0x52, 0xf6, 0x01, 0xdc, 0xcd, 
    0x29, 0x15, 0x54, 0x99, 0xc2, 0x0e, 0x41, 0x8a, 0x72, 0xbf, 0xbe, 0x7a, 0xa0, 0xfa, 0x72, 0x2c, 0xc0, 0x0b, 0xb7, 0xf2, 0x28, 0x57, 0xa3, 0x5c, 0x8f, 0xaa, 0x0b, 0x09, 0x4c, 0x34, 0xb4, 
    0xd9, 0xce, 0x17, 0xcd, 0x87, 0xb5, 0xfb, 0xd4, 0xe6, 0x77, 0x73, 0xd4, 0x61, 0x16, 0x8a, 0x01, 0x4a, 0x98, 0x23, 0x52, 0xe6, 0x63, 0xe8, 0xaa, 0x8a, 0x38, 0xc6, 0x0c, 0xb2, 0xc7, 0x92, 
    0x44, 0x69, 0x0e, 0x55, 0x7b, 0x0c, 0xc0, 0x62, 0x1a, 0x40, 0xdb, 0x08, 0xa0, 0xa5, 0xf7, 0x54, 0x6a, 0x86, 0xb1, 0xbe, 0xc7, 0x82, 0x6c, 0x50, 0x62, 0x53, 0x8d, 0x52, 0x35, 0xfa, 0x2f, 
    0x75, 0x70, 0x3d, 0x95, 0xd7, 0x73, 0x31, 0xb6, 0x5b, 0xa4, 0x41, 0xd4, 0xe5, 0xde, 0xe2, 0xfa, 0x83, 0x84, 0xf5, 0xc2, 0x91, 0xec, 0xd3, 0x61, 0x62, 0x42, 0x6e, 0xb5, 0x6c, 0x0a, 0x8c, 
    0xf5, 0x20, 0x85, 0x31, 0xd7, 0xf2, 0x7d, 0x0f, 0x20, 0xc3, 0xf6, 0x31, 0xcb, 0xee, 0x38, 0xf8, 0xa6, 0xff, 0x88, 0x0b, 0x96, 0xd3, 0xc2, 0x68, 0xcf, 0x0b, 0x27, 0x67, 0x31, 0x17, 0xf2, 
    0x58, 0x5d, 0x2b, 0x98, 0x4f, 0x5a, 0xda, 0x2c, 0xf4, 0x4d, 0x9c, 0x3a, 0xf7, 0xfc, 0x8a, 0x6e, 0x8a, 0x87, 0x04, 0xfe, 0x54, 0xbe, 0xa9, 0x5b, 0x25, 0x43, 0x38, 0x33, 0x48, 0xe2, 0xda, 
    0xd3, 0x09, 0xbe, 0x89, 0x37, 0x76, 0x65, 0xec, 0xd7, 0x7b, 0xd0, 0x1f, 0x50, 0x07, 0x1f, 0xf5, 0x3c, 0xe8, 0x01, 0x63, 0x40, 0xe4, 0x6b, 0x93, 0x32, 0x3a, 0x27, 0x98, 0x81, 0x31, 0x94, 
    0x41, 0x1b, 0x25, 0x5e, 0x85, 0x18, 0x58, 0x5c, 0x20, 0x1c, 0x03, 0xae, 0xb8, 0xa7, 0x02, 0xbf, 0x13, 0x01, 0xf1, 0xfc, 0x87, 0x5c, 0xa5, 0x60, 0x54, 0xdf, 0xe7, 0xea, 0xf3, 0x03, 0xae, 
    0x3e, 0x2f, 0xe7, 0x8a, 0x55, 0x95, 0x0a, 0x0f, 0x03, 0x58, 0xfc, 0x98, 0x0a, 0x3a, 0x66, 0x31, 0x74, 0xe0, 0x56, 0xa8, 0xa8, 0x5f, 0xe6, 0x31, 0x66, 0x3f, 0xe2, 0xb1, 0xe7, 0xf1, 0x91, 
    0x5c, 0xc2, 0x69, 0xde, 0xff, 0xb7, 0xf8, 0xc5, 0x6d, 0x1f, 0xe5, 0x37, 0xab, 0x12, 0x2a, 0x41, 0xf3, 0x07, 0xb7, 0x68, 0xca, 0x11, 0x6d, 0x84, 0xbf, 0x45, 0xe7, 0xfa, 0xbb, 0x0e, 0xe2, 
    0x83, 0x63, 0x23, 0x77, 0xa5, 0x5a, 0x5d, 0x74, 0xa1, 0xd2, 0x3a, 0x02, 0xe6, 0x4c, 0x8d, 0xd3, 0xcc, 0x9e, 0xc2, 0x0c, 0x69, 0x9b, 0x8b, 0xf0, 0xe1, 0x41, 0xe8, 0x07, 0x11, 0x61, 0x6b, 
    0xc8, 0x21, 0x1a, 0x5f, 0x5e, 0x3f, 0xbb, 0x5a, 0x81, 0x70, 0x6b, 0xc3, 0x47, 0xcd, 0x86, 0xc6, 0xb3, 0xab, 0x7f, 0xd7, 0x1a, 0x63, 0xbe, 0x5a, 0x68, 0x2c, 0x8b, 0xde, 0xa0, 0xb7, 0x2f, 
    0xe2, 0xca, 0xa6, 0xa8, 0x86, 0x4a, 0x80, 0xcf, 0xe1, 0x15, 0x2d, 0x13, 0xc5, 0xc7, 0x4f, 0xfc, 0x12, 0x12, 0x7e, 0x2a, 0xcf, 0x45, 0x94, 0x58, 0xf2, 0x16, 0xc9, 0xc8, 0xdf, 0x09, 0x1b, 
    0xab, 0xe5, 0x3b, 0x4e, 0x03, 0x5f, 0xcc, 0x1a, 0xba, 0x56, 0x96, 0x65, 0x7c, 0xd2, 0xab, 0x2b, 0x14, 0xd2, 0x4d, 0x7b, 0x11, 0x00, 0x8b, 0x1a, 0x4e, 0x4f, 0xa8, 0xcd, 0xd0, 0xcc, 0xd9, 
    0x08, 0x5c, 0xd8, 0x35, 0xe6, 0xf9, 0xc2, 0xa7, 0xe3, 0xa3, 0x03, 0x29, 0xa3, 0x0b, 0x0d, 0xd5, 0x6a, 0xbd, 0x6a, 0x57, 0x71, 0xb6, 0xb5, 0xa9, 0x8c, 0xef, 0xf3, 0xa4, 0x10, 0x03, 0x9b, 
    0xc6, 0x84, 0x4f, 0xa7, 0xc3, 0x6b, 0x08, 0x00, 0xa6, 0x71, 0x9c, 0x40, 0x04, 0x5e, 0xb3, 0x90, 0xbc, 0xdf, 0x3f, 0xb3, 0x36, 0xad, 0x26, 0x24, 0x46, 0xa0, 0x67, 0xcc, 0x45, 0xc0, 0x2e, 
    0x66, 0xbf, 0x44, 0xbd, 0xfe, 0x8b, 0xd4, 0x1c, 0xf0, 0x2f, 0x01, 0x74, 0xcb, 0x17, 0x58, 0x20, 0xf6, 0xe2, 0x70, 0xa2, 0xe8, 0xf6, 0xe3, 0x18, 0x4f, 0xa9, 0x0f, 0x29, 0x1a, 0x24, 0x1f, 
    0xe1, 0x24, 0x61, 0x31, 0xd4, 0xe7, 0x2c, 0x21, 0x22, 0x94, 0x24, 0x49, 0xa3, 0x08, 0x0a, 0xcb, 0x05, 0xa5, 0x58, 0xc6, 0xfc, 0xf2, 0xed, 0x3c, 0x65, 0x29, 0x73, 0xb3, 0x7e, 0x16, 0x57, 
    0x74, 0x83, 0x89, 0xe4, 0x57, 0x1c, 0xb7, 0xbf, 0x5c, 0xe5, 0x79, 0x65, 0x2a, 0x04, 0x42, 0x32, 0xbe, 0xdf, 0x52, 0x1d, 0x20, 0xa2, 0x07, 0x0b, 0xdb, 0x22, 0xf5, 0xfd, 0xd9, 0xd6, 0xe2, 
    0x72, 0x50, 0x23, 0x87, 0x32, 0x54, 0x6f, 0x6c, 0xa6, 0x7f, 0x66, 0xc1, 0xb3, 0xea, 0xac, 0x98, 0xf2, 0x55, 0x57, 0x06, 0xa4, 0x7f, 0x62, 0x3e, 0x61, 0x84, 0x8b, 0x44, 0x52, 0xe1, 0xe0, 
    0x91, 0x6a, 0x9d, 0xd4, 0xf2, 0x7c, 0x12, 0xe7, 0x6f, 0xa9, 0xc8, 0x9f, 0x19, 0xd8, 0x23, 0x91, 0x5f, 0x4b, 0x28, 0x6c, 0xc3, 0xd0, 0xa9, 0x25, 0xc3, 0x94, 0x9e, 0x06, 0x49, 0x79, 0xe9, 
    0x3c, 0xd3, 0xa9, 0xc1, 0xbc, 0x7c, 0x1c, 0xca, 0x6c, 0x1f, 0x52, 0xae, 0xc7, 0x48, 0x32, 0x6e, 0x8a, 0xca, 0x9b, 0xc2, 0x28, 0xc9, 0x67, 0xc2, 0x42, 0x64, 0x05, 0xb6, 0x54, 0x21, 0xf5, 
    0x35, 0x51, 0x49, 0x82, 0xb2, 0xee, 0x80, 0x49, 0x2f, 0x74, 0xb1, 0xeb, 0xb5, 0x01, 0xb9, 0x87, 0xa1, 0xfe, 0x3c, 0xc3, 0x8c, 0x0a, 0xe6, 0x33, 0xe1, 0x00, 0x00, 0x0c, 0x2e, 0xde, 0x01, 
    0xc2, 0x45, 0x90, 0xd9, 0x08, 0x09, 0x85, 0x07, 0xa2, 0xbf, 0xbe, 0xd6, 0x7f, 0x38, 0x9a, 0x6f, 0xf7, 0x85, 0x5e, 0xc1, 0x49, 0x56, 0x8f, 0x02, 0x8c, 0xa2, 0x7a, 0xde, 0xd5, 0xb3, 0xb2, 
    0x42, 0x81, 0xb8, 0x77, 0x9f, 0xe0, 0x0b, 0xef, 0x07, 0xef, 0x4f, 0x54, 0x26, 0xb8, 0x58, 0x27, 0xd5, 0xa6, 0x1b, 0x28, 0x82, 0x22, 0xeb, 0x21, 0x99, 0x72, 0xab, 0xef, 0x9d, 0x40, 0x96, 
    0x9e, 0x09, 0xcb, 0xa1, 0xbe, 0x8f, 0x5f, 0x60, 0x30, 0xf1, 0x72, 0x84, 0xca, 0x34, 0x41, 0xdc, 0x80, 0xda, 0x04, 0xe4, 0x48, 0x58, 0x1f, 0xd0, 0x12, 0x1c, 0x5b, 0xa5, 0x43, 0xda, 0xd4, 
    0xf2, 0x8b, 0x26, 0x95, 0x1b, 0x95, 0xcc, 0x4d, 0xb9, 0x7f, 0xf6, 0x88, 0x83, 0xd2, 0xca, 0xed, 0xc9, 0xcc, 0x29, 0x13, 0x0c, 0x0a, 0x66, 0x0d, 0xeb, 0x35, 0xb3, 0x2c, 0xaf, 0x4e, 0x4d, 
    0x97, 0x1c, 0x84, 0x59, 0xd5, 0x0a, 0xa4, 0xb9, 0x66, 0x3e, 0x8a, 0x4c, 0xa6, 0xb1, 0xaf, 0x71, 0x5c, 0xa5, 0x07, 0x95, 0xb9, 0x09, 0x66, 0xc4, 0x35, 0x55, 0x08, 0xff, 0x70, 0x8d, 0x8c, 
    0x5e, 0x94, 0x4d, 0xa8, 0x27, 0xe3, 0x5c, 0x8e, 0xea, 0xb2, 0x32, 0x3b, 0xb1, 0x03, 0xa6, 0x31, 0x74, 0x17, 0x6f, 0x9f, 0x84, 0xac, 0xa3, 0x0b, 0x81, 0x3a, 0x0d, 0x48, 0xc6, 0x7d, 0xae, 
    0x91, 0xbe, 0x71, 0x57, 0x9f, 0x4c, 0x26, 0x75, 0xfc, 0xf6, 0x42, 0x1d, 0xb6, 0xd1, 0x36, 0xe2, 0x1a, 0x4b, 0x59, 0x15, 0xa8, 0x94, 0x55, 0x92, 0xa8, 0x6f, 0x6e, 0x2c, 0xba, 0x78, 0x49, 
    0xab, 0x0b, 0xae, 0xd8, 0x5a, 0x58, 0xec, 0x01, 0xc3, 0x25, 0x83, 0xd8, 0x26, 0x1b, 0x0f, 0x86, 0xe9, 0x10, 0xbf, 0xb1, 0x80, 0xa1, 0x0c, 0xa2, 0x7f, 0xbb, 0x7a, 0xdf, 0x90, 0x47, 0x9d, 
    0x02, 0x65, 0xac, 0x28, 0x4d, 0x3c, 0x73, 0x0a, 0xb2, 0xb4, 0x71, 0x58, 0x2b, 0x11, 0xf2, 0x66, 0xa8, 0x96, 0x95, 0xa9, 0xb7, 0x91, 0x22, 0x37, 0xa7, 0x36, 0x51, 0x91, 0xaa, 0x22, 0xc0, 
    0x5f, 0x7f, 0xe9, 0xe7, 0xc2, 0x32, 0x8a, 0xb5, 0x73, 0xe3, 0x98, 0xe5, 0x37, 0xf7, 0x59, 0x26, 0xaf, 0xbc, 0x65, 0x01, 0xb5, 0xb6, 0x1b, 0xd9, 0x77, 0x3e, 0xb2, 0xef, 0x7e, 0x10, 0x70, 
    0x92, 0x18, 0xce, 0xc6, 0x4e, 0xe5, 0xa8, 0xfe, 0x92, 0x70, 0x17, 0xd3, 0x61, 0xf5, 0xba, 0x0b, 0xa5, 0x4c, 0xda, 0x8d, 0x86, 0xe3, 0x8a, 0xeb, 0x04, 0x8a, 0x87, 0x30, 0x75, 0x47, 0x3e, 
    0x8d, 0x19, 0xa6, 0x3d, 0x0d, 0x7a, 0x4d, 0xef, 0x1a, 0x3e, 0x1f, 0x26, 0x0d, 0x0c, 0xf0, 0x2d, 0x6b, 0xcd, 0xda, 0xc4, 0x96, 0x75, 0x9d, 0xec, 0x2c, 0xee, 0xb0, 0x53, 0x54, 0xbe, 0x98, 
    0xc7, 0x67, 0xc9, 0xb6, 0xc6, 0x3b, 0x3d, 0xc3, 0x7e, 0xe4, 0x8b, 0x23, 0x46, 0x56, 0xaa, 0xe2, 0x37, 0x04, 0x54, 0x4b, 0xbf, 0x1b, 0xd4, 0xfb, 0xe0, 0x9b, 0x11, 0xdd, 0x49, 0x93, 0x7b, 
    0xe1, 0x28, 0xd4, 0x9e, 0xaf, 0xe3, 0xc1, 0xd9, 0x55, 0x2f, 0x55, 0xd5, 0xd4, 0xda, 0xac, 0x60, 0x0e, 0x6f, 0x77, 0x21, 0xf5, 0x50, 0xaf, 0x17, 0xcb, 0x19, 0xc8, 0x0e, 0xd9, 0x76, 0xf9, 
    0x2d, 0x2a, 0x42, 0xbb, 0x3f, 0x51, 0x57, 0x13, 0xd9, 0x03, 0x08, 0x07, 0x83, 0x3b, 0xf9, 0x8c, 0x3c, 0x0b, 0x58, 0xe8, 0xc6, 0x2c, 0x60, 0xa1, 0x4b, 0xe7, 0x19, 0x0b, 0x9d, 0x59, 0xfd, 
    0x97, 0xbd, 0x0e, 0xcc, 0xdf, 0xef, 0x21, 0xba, 0xe4, 0x13, 0xb9, 0x7a, 0x29, 0x8a, 0x73, 0xab, 0xaf, 0x49, 0x97, 0x93, 0xe8, 0xd9, 0xd0, 0x40, 0xd9, 0x76, 0xfe, 0x0b, 0x75, 0x58, 0x2d, 
    0xd0, 0x62, 0x2d, 0x00, 0x00
};
const int edit_htm_gz_len = sizeof(edit_htm_gz)/sizeof(uint8_t);

WebServerDefaultHandler::WebServerDefaultHandler(const fs::FS& fs, const String& username, const String& password)
    : AsyncWebHandler(), _fs(fs)
{
    this->_username = username;
    this->_password = password;
    this->_authenticated = false;
    this->_startTime = 0;
    this->setAuthentication(username.c_str(), password.c_str());
}

bool WebServerDefaultHandler::canHandle(AsyncWebServerRequest *request) 
{
    if(request->url().equalsIgnoreCase("/spiffs")  || 
       request->url().equalsIgnoreCase("/spiffs/") ||
       request->url().equalsIgnoreCase("/spiffs/edit") )
    {
        if(request->method() == HTTP_GET)
        {
            if(request->hasParam("list"))
            {
                return true;
            }
            
            if(request->hasParam("edit"))
            {
                request->_tempFile = _fs.open(request->arg("edit"), "r");
                if(!request->_tempFile)
                {
                    return false;
                }
                if(request->_tempFile.isDirectory())
                {
                    request->_tempFile.close();
                    return false;
                }
            }
            if(request->hasParam("download"))
            {
                request->_tempFile = _fs.open(request->arg("download"), "r");
                if(!request->_tempFile)
                {
                    return false;
                }
                if(request->_tempFile.isDirectory())
                {
                    request->_tempFile.close();
                    return false;
                }
            }
            request->addInterestingHeader("If-Modified-Since");
            return true;
        }
        else if(request->method() == HTTP_POST || request->method() == HTTP_DELETE || request->method() == HTTP_PUT)
        {
            return true;
        }
    }
    return false;
}

void WebServerDefaultHandler::handleRequest(AsyncWebServerRequest *request)
{
    if(_username.length() && _password.length() && !request->authenticate(_username.c_str(), _password.c_str()))
    {
        return request->requestAuthentication();
    }

    if(request->url().equalsIgnoreCase("/spiffs")  || 
       request->url().equalsIgnoreCase("/spiffs/") ||
       request->url().equalsIgnoreCase("/spiffs/edit") )
    {
        if(request->method() == HTTP_GET)
        {
            if(request->hasParam("list")){
                String path = request->getParam("list")->value();
                File dir = _fs.open(path);

                path = String();
                String output = "[";
                File entry = dir.openNextFile();
                while(entry)
                {
                    if (output != "[") 
                    {
                        output += ',';
                    }
                    output += "{\"type\":\"";
                    output += "file";
                    output += "\",\"name\":\"";
                    output += String(entry.name());
                    output += "\",\"size\":";
                    output += String(entry.size());
                    output += "}";

                    entry = dir.openNextFile();
                }
                dir.close();
                output += "]";
                request->send(200, "application/json", output);
                output = String();
            }
            else if(request->hasParam("edit") || request->hasParam("download"))
            {
                request->send(request->_tempFile, request->_tempFile.name(), String(), request->hasParam("download"));
            }
            else 
            {
                const char * buildTime = __DATE__ " " __TIME__ " GMT";
                if (request->header("If-Modified-Since").equals(buildTime)) 
                {
                    request->send(304);
                } 
                else 
                {
                    AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", edit_htm_gz, edit_htm_gz_len);
                    response->addHeader("Content-Encoding", "gzip");
                    response->addHeader("Last-Modified", buildTime);
                    request->send(response);
                }
            }
        } 
        else if(request->method() == HTTP_DELETE)
        {
            if(request->hasParam("path", true))
            {
                _fs.remove(request->getParam("path", true)->value());
                request->send(200, "", "DELETE: "+request->getParam("path", true)->value());
            } 
            else
            {
                request->send(404);
            } 
        }
        else if(request->method() == HTTP_POST)
        {
            if(request->hasParam("data", true, true) && _fs.exists(request->getParam("data", true, true)->value()))
            {
                request->send(200, "", "UPLOADED: "+request->getParam("data", true, true)->value());
            }
            else
            {
                request->send(500);
            }
        } 
        else if(request->method() == HTTP_PUT)
        {
            if(request->hasParam("path", true))
            {
                String filename = request->getParam("path", true)->value();
                if(_fs.exists(filename))
                {
                    request->send(200);
                } 
                else 
                {
                    fs::File f = _fs.open(filename, "w");
                    if(f)
                    {
                        f.write((uint8_t)0x00);
                        f.close();
                        request->send(200, "", "CREATE: "+filename);
                    } 
                    else 
                    {
                        request->send(500);
                    }
                }
            } 
            else
            {
                request->send(400);
            }
        }
    }    
}

void WebServerDefaultHandler::handleUpload(AsyncWebServerRequest *request, const String& filename, size_t index, uint8_t *data, size_t len, bool final)
{
    if(request->url().equalsIgnoreCase("/spiffs")  || 
       request->url().equalsIgnoreCase("/spiffs/") ||
       request->url().equalsIgnoreCase("/spiffs/edit") )
    {
        if(!index)
        {
            if(!_username.length() || request->authenticate(_username.c_str(),_password.c_str()))
            {
                _authenticated = true;
                request->_tempFile = _fs.open(filename, "w");
                _startTime = millis();
            }
        }
        if(_authenticated && request->_tempFile)
        {
            if(len)
            {
                request->_tempFile.write(data,len);
            }
            if(final)
            {
                request->_tempFile.close();
            }
        }        
    }
}

bool WebServerDefaultHandler::isRequestHandlerTrivial()
{
    return false;
}

WebServer::WebServer(uint16_t listenPort,const String& username, const String& password)
    : server(listenPort), requestHandler(SPIFFS, username, password)
{
    this->server.addHandler(&this->requestHandler);
    this->server.serveStatic("/", SPIFFS, "/www").setDefaultFile("index.html");
    this->server.onNotFound([](AsyncWebServerRequest *request)
        {
            Serial.printf("NOT_FOUND: ");
            if(request->method() == HTTP_GET)
                Serial.printf("GET");
            else if(request->method() == HTTP_POST)
                Serial.printf("POST");
            else if(request->method() == HTTP_DELETE)
                Serial.printf("DELETE");
            else if(request->method() == HTTP_PUT)
                Serial.printf("PUT");
            else if(request->method() == HTTP_PATCH)
                Serial.printf("PATCH");
            else if(request->method() == HTTP_HEAD)
                Serial.printf("HEAD");
            else if(request->method() == HTTP_OPTIONS)
                Serial.printf("OPTIONS");
            else
                Serial.printf("UNKNOWN");
            
            Serial.printf(" http://%s%s\n", request->host().c_str(), request->url().c_str());

            if(request->contentLength())
            {
                Serial.printf("_CONTENT_TYPE: %s\n", request->contentType().c_str());
                Serial.printf("_CONTENT_LENGTH: %u\n", request->contentLength());
            }

            int headers = request->headers();
            int i;
            for(i=0;i<headers;i++)
            {
                AsyncWebHeader* h = request->getHeader(i);
                Serial.printf("_HEADER[%s]: %s\n", h->name().c_str(), h->value().c_str());
            }

            int params = request->params();
            for(i=0;i<params;i++)
            {
                AsyncWebParameter* p = request->getParam(i);
                if(p->isFile())
                {
                    Serial.printf("_FILE[%s]: %s, size: %u\n", p->name().c_str(), p->value().c_str(), p->size());
                } 
                else if(p->isPost())
                {
                    Serial.printf("_POST[%s]: %s\n", p->name().c_str(), p->value().c_str());
                } 
                else {
                    Serial.printf("_GET[%s]: %s\n", p->name().c_str(), p->value().c_str());
                }
            }

            request->send(404);
        }
    );
    
    server.onFileUpload([](AsyncWebServerRequest *request, const String& filename, size_t index, uint8_t *data, size_t len, bool final)
        {
            if(!index)
            {
                Serial.printf("UploadStart: %s\n", filename.c_str());
            }
            Serial.printf("%s", (const char*)data);
            if(final)
            {
                Serial.printf("UploadEnd: %s (%u)\n", filename.c_str(), index+len);
            }
        }
    );

    server.onRequestBody([](AsyncWebServerRequest *request, uint8_t *data, size_t len, size_t index, size_t total)
        {
            if(!index){
                Serial.printf("BodyStart: %u\n", total);
            }
            
            Serial.printf("%s", (const char*)data);
            if(index + len == total){
                Serial.printf("BodyEnd: %u\n", total);
            }
        }
    );
}

void WebServer::begin()
{
    this->server.begin();
}

void WebServer::end()
{
    this->server.end();
}